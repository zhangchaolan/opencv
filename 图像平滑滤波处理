import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt 
image=cv.imread("C:/111/zaosheng.png",cv.IMREAD_ANYCOLOR)
#高斯滤波
gauss=cv.GaussianBlur(image,(11,11),0,0)#高斯滤波函数（src,(卷积核大小)，sigmaX权重值，sigmaY权重值）
cv.imshow("image",image)
cv.imshow("gauss",gauss)
#均值滤波
means5=cv.blur(image,(5,5),(-1,-1))#（-1，-1）为默认锚点
means10=cv.blur(image,(10,10),(-1,-1))
cv.imshow("image",image)
cv.imshow("means5",means5)
cv.imshow("means10",means10)
#卷积核越大，失真越严重
#方框滤波
box5_5=cv.boxFilter(image,-1,(5,5),(-1,-1),normalize=0)#默认深度是-1，卷积核大小（5，5），默认锚点（-1，-1），不进行归一化
box5_1=cv.boxFilter(image,-1,(5,5),(-1,-1),normalize=1)#进行归一化
cv.imshow("image",image)
cv.imshow("box5_5",box5_5)
cv.imshow("box5_1",box5_1)
#中值滤波(处理椒盐噪声且不会产生图像模糊的现象)
median=cv.medianBlur(image,5)#这里的卷积核大小不写坐标了
cv.imshow("image",image)
cv.imshow("median",median)
#双边滤波，（计算像素点考虑到距离信息和色差信息，能保护边缘信息）
bilateral=cv.bilateralFilter(image,5,1000,1000)#双边滤波函数，卷积核不写坐标了，像素点为100，sigma值为100，越大表示越多点参与滤波
cv.imshow("image",image)
cv.imshow("bilateral",bilateral)
#自定义卷积核滤波处理
k1=np.ones((5,5),np.float32)*3/(5*5)#设置大小为5*5,值为3的卷积核
filter=cv.filter2D(image,-1,k1)#滤波
cv.imshow("image",image)
cv.imshow("filter",filter)
cv.waitKey()
cv.destroyAllWindows()
